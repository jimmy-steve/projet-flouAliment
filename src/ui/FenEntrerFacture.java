/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import modele.*;
import utils.FraisExisteDejaException;
import utils.Utilitaire;

import javax.swing.*;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;

/**
 * @author Maxime
 */
public class FenEntrerFacture extends javax.swing.JFrame {
    JFrame fenMenu;

    private RegistreEmploye listing;
    private RegistreFrais listingFrais;

    /**
     * Creates new form FenEntrerFacture
     */
    public FenEntrerFacture() {
        initComponents();
        jCheckPlaneRide.setEnabled(false);
    }

    public FenEntrerFacture(RegistreEmploye listing, RegistreFrais listingFrais, JFrame fenMenu) {
        this();
        this.fenMenu = fenMenu;
        this.listing = listing;
        this.listingFrais = listingFrais;

        jCheckPlaneRide.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        lblTitre = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMontant = new javax.swing.JTextField();
        jCheckTransport = new javax.swing.JCheckBox();
        jCheckHebergement = new javax.swing.JCheckBox();
        jCheckRestaurant = new javax.swing.JCheckBox();
        jCheckPlaneRide = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        txtDateFormat = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNomEmp = new javax.swing.JTextField();
        txtPrenomEmp = new javax.swing.JTextField();
        jCheckJunior = new javax.swing.JCheckBox();
        jCheckSenior = new javax.swing.JCheckBox();
        jCheckSuper = new javax.swing.JCheckBox();
        btnEffacer = new javax.swing.JButton();
        btnSoumettre = new javax.swing.JButton();
        btnRetour = new javax.swing.JButton();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitre.setFont(new java.awt.Font("Bahnschrift", 1, 48)); // NOI18N
        lblTitre.setText("FlouAliments");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Comptabilité");

        jLabel2.setText("Entrer la facture de l'employé");

        jLabel3.setText("Information de la facture");

        jLabel4.setText("Montant: ");

        jLabel5.setText("Date:");

        jCheckTransport.setText("Transport");
        jCheckTransport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckTransportActionPerformed(evt);
            }
        });

        jCheckHebergement.setText("Hébergement");
        jCheckHebergement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckHebergementActionPerformed(evt);
            }
        });

        jCheckRestaurant.setText("Restaurant");
        jCheckRestaurant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckRestaurantActionPerformed(evt);
            }
        });

        jCheckPlaneRide.setText("Transport aérien");
        jCheckPlaneRide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckPlaneRideActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel9.setText("Entrer la date dans ce format: YYYY-MM-DD");

        try {
            txtDateFormat.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDateFormat.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDateFormat.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        txtDateFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateFormatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckPlaneRide, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckTransport, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckHebergement, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMontant, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDateFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMontant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDateFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckTransport)
                    .addComponent(jCheckHebergement)
                    .addComponent(jCheckRestaurant))
                .addGap(18, 18, 18)
                .addComponent(jCheckPlaneRide)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jLabel6.setText("Information de l'employé");

        jLabel7.setText("Nom: ");

        jLabel8.setText("Prenom:");

        jCheckJunior.setText("Junior");
        jCheckJunior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckJuniorActionPerformed(evt);
            }
        });

        jCheckSenior.setText("Senior");
        jCheckSenior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckSeniorActionPerformed(evt);
            }
        });

        jCheckSuper.setText("Super");
        jCheckSuper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckSuperActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrenomEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNomEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckJunior, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckSenior, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jCheckSuper, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel6)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtNomEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtPrenomEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckJunior)
                    .addComponent(jCheckSenior)
                    .addComponent(jCheckSuper))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        btnEffacer.setText("Effacer");
        btnEffacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEffacerActionPerformed(evt);
            }
        });

        btnSoumettre.setText("Soumettre");
        btnSoumettre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSoumettreActionPerformed(evt);
            }
        });

        btnRetour.setText("Retour au menu");
        btnRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addComponent(btnRetour)
                .addGap(41, 41, 41)
                .addComponent(btnSoumettre, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnEffacer, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitre)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))))
                        .addGap(355, 355, 355))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTitre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRetour)
                    .addComponent(btnSoumettre)
                    .addComponent(btnEffacer))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void jCheckTransportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckTransportActionPerformed
        // TODO add your handling code here:

        if (jCheckTransport.isSelected()) {
            jCheckHebergement.setEnabled(false);
            jCheckPlaneRide.setEnabled(false);
            jCheckRestaurant.setEnabled(false);

        }
        if (!jCheckTransport.isSelected() && !jCheckHebergement.isSelected() && !jCheckRestaurant.isSelected()) {
            jCheckHebergement.setEnabled(true);
            jCheckTransport.setEnabled(true);
            jCheckRestaurant.setEnabled(true);
        }

        if (!jCheckTransport.isSelected() && !jCheckHebergement.isSelected() && !jCheckRestaurant.isSelected() && jCheckSuper.isSelected()) {
            jCheckHebergement.setEnabled(true);
            jCheckTransport.setEnabled(true);
            jCheckRestaurant.setEnabled(true);
            jCheckPlaneRide.setEnabled(true);
        }

    }//GEN-LAST:event_jCheckTransportActionPerformed

    private void jCheckPlaneRideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckPlaneRideActionPerformed
        // TODO add your handling code here:
        if (jCheckPlaneRide.isSelected()) {
            jCheckHebergement.setEnabled(false);
            jCheckTransport.setEnabled(false);
            jCheckRestaurant.setEnabled(false);
        }
        if (!jCheckPlaneRide.isSelected()) {
            jCheckHebergement.setEnabled(true);
            jCheckTransport.setEnabled(true);
            jCheckRestaurant.setEnabled(true);
            jCheckPlaneRide.setEnabled(true);
        }

        if (!jCheckTransport.isSelected() && !jCheckHebergement.isSelected() && !jCheckRestaurant.isSelected() && !jCheckSuper.isSelected() && !jCheckPlaneRide.isSelected()) {
            jCheckHebergement.setEnabled(true);
            jCheckTransport.setEnabled(true);
            jCheckRestaurant.setEnabled(true);
            jCheckPlaneRide.setEnabled(true);
        }


    }//GEN-LAST:event_jCheckPlaneRideActionPerformed

    private void jCheckHebergementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckHebergementActionPerformed
        // TODO add your handling code here:
        if (jCheckHebergement.isSelected()) {
            jCheckRestaurant.setEnabled(false);
            jCheckTransport.setEnabled(false);
            jCheckPlaneRide.setEnabled(false);
        }
        if (!jCheckTransport.isSelected() && !jCheckHebergement.isSelected() && !jCheckRestaurant.isSelected()) {
            jCheckHebergement.setEnabled(true);
            jCheckTransport.setEnabled(true);
            jCheckRestaurant.setEnabled(true);
        }
        if (!jCheckTransport.isSelected() && !jCheckHebergement.isSelected() && !jCheckRestaurant.isSelected() && jCheckSuper.isSelected()) {
            jCheckHebergement.setEnabled(true);
            jCheckTransport.setEnabled(true);
            jCheckRestaurant.setEnabled(true);
            jCheckPlaneRide.setEnabled(true);
            jCheckSenior.setEnabled(true);
            jCheckJunior.setEnabled(true);
            jCheckSuper.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckHebergementActionPerformed

    private void jCheckRestaurantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckRestaurantActionPerformed
        // TODO add your handling code here:
        if (jCheckRestaurant.isSelected()) {
            jCheckHebergement.setEnabled(false);
            jCheckTransport.setEnabled(false);
            jCheckPlaneRide.setEnabled(false);

        }
        if (!jCheckTransport.isSelected() && !jCheckHebergement.isSelected() && !jCheckRestaurant.isSelected()) {
            jCheckHebergement.setEnabled(true);
            jCheckTransport.setEnabled(true);
            jCheckRestaurant.setEnabled(true);
        }

        if (!jCheckTransport.isSelected() && !jCheckHebergement.isSelected() && !jCheckRestaurant.isSelected() && jCheckSuper.isSelected()) {
            jCheckHebergement.setEnabled(true);
            jCheckTransport.setEnabled(true);
            jCheckRestaurant.setEnabled(true);
            jCheckPlaneRide.setEnabled(true);
        }


    }//GEN-LAST:event_jCheckRestaurantActionPerformed

    private void jCheckJuniorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckJuniorActionPerformed
        // TODO add your handling code here:
        if (jCheckJunior.isSelected()) {
            jCheckSenior.setEnabled(false);
            jCheckSuper.setEnabled(false);
            jCheckPlaneRide.setEnabled(false);
        }
        if (!jCheckJunior.isSelected() && !jCheckSuper.isSelected() && !jCheckSenior.isSelected()) {
            jCheckSenior.setEnabled(true);
            jCheckJunior.setEnabled(true);
            jCheckSuper.setEnabled(true);
        }

    }//GEN-LAST:event_jCheckJuniorActionPerformed


    private void jCheckSeniorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckSeniorActionPerformed
        // TODO add your handling code here:
        if (jCheckSenior.isSelected()) {
            jCheckJunior.setEnabled(false);
            jCheckSuper.setEnabled(false);
            jCheckPlaneRide.setEnabled(false);
        }
        if (!jCheckJunior.isSelected() && !jCheckSuper.isSelected() && !jCheckSenior.isSelected()) {
            jCheckSenior.setEnabled(true);
            jCheckJunior.setEnabled(true);
            jCheckSuper.setEnabled(true);
        }

    }//GEN-LAST:event_jCheckSeniorActionPerformed

    private void jCheckSuperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckSuperActionPerformed
        // TODO add your handling code here:
        if (jCheckSuper.isSelected()) {
            jCheckPlaneRide.setEnabled(true);
            jCheckJunior.setEnabled(false);
            jCheckSenior.setEnabled(false);
        }
        if (!jCheckJunior.isSelected() && !jCheckSuper.isSelected() && !jCheckSenior.isSelected() && !jCheckPlaneRide.isSelected()) {
            jCheckSenior.setEnabled(true);
            jCheckJunior.setEnabled(true);
            jCheckSuper.setEnabled(true);
            jCheckPlaneRide.setEnabled(true);
        }
//Essaie non fructifiant
//        if ((jCheckTransport.isSelected() || jCheckRestaurant.isSelected() || jCheckHebergement.isSelected()) || jCheckSuper.isSelected()) {
//            jCheckPlaneRide.setEnabled(false);
//        }


    }//GEN-LAST:event_jCheckSuperActionPerformed
//    private void mettreTransportAerienEnabled() {
//        if (!jCheckJunior.isSelected() && !jCheckSuper.isSelected() && !jCheckSenior.isSelected()){
//            jCheckPlaneRide.setEnabled(false);
//        }
//    }

    private void btnRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourActionPerformed
        // TODO add your handling code here:
        this.dispose();
        fenMenu.setVisible(true);
    }//GEN-LAST:event_btnRetourActionPerformed

    private void btnEffacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEffacerActionPerformed
        // TODO add your handling code here:       
        clearChamps();


    }//GEN-LAST:event_btnEffacerActionPerformed

    /**
     * Prends les champs en compte et construit un intances de la classe Frais
     * @param evt
     */
    private void btnSoumettreActionPerformed(java.awt.event.ActionEvent evt)  {//GEN-FIRST:event_btnSoumettreActionPerformed

        boolean statut = validerData();

        //Recherche de l'employer dans la liste
        boolean EmployeExiste = validerEmploye();

        //Valider que la date est dans le passé

//        String date2 = txtDateFormat.getText();//------------------------------sa récupère la date direct en String
        //--------------------------il faudrais metre date en string


        //Vérification de la date
        boolean checkDate = false;
        LocalDate date = null;
        try {
            date = LocalDate.parse(txtDateFormat.getText());
            checkDate = true;
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(null, "Erreur!Veuiller donner une date valide!\n", "Erreur Ajout Frais", JOptionPane.ERROR_MESSAGE);
            txtDateFormat.setText("");
        }
        boolean dateValide = validerDate(date);

        //Vérification du Montant
        double montant = 0;
        boolean checkMontant = false;
        try {
            montant = Double.parseDouble(txtMontant.getText());
            checkMontant = true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erreur! Frais se doit d'être un nombre\n", "Erreur Ajout Frais", JOptionPane.ERROR_MESSAGE);
            txtMontant.setText("");
        }
        boolean montantValide = validerMontantPlusGrdZero(montant);


        //Création du Frais en fonction des choix
        if (statut && EmployeExiste && dateValide && montantValide && checkMontant && checkDate) {
            //Creer un instance de l'employe afin de créer le Frais
            Employe emp = trouverEmploye();


            if (jCheckHebergement.isSelected()) {
                creerFraisHergement(emp, date, montant,listingFrais);
            } else if (jCheckTransport.isSelected()) {
                creerFraisTransport(emp, date, montant,listingFrais);
            } else if (jCheckRestaurant.isSelected()) {
                creerFraisRestaurant(emp, date, montant,listingFrais);
            } else if (jCheckPlaneRide.isSelected()) {
                creerFraisTransportAvion(emp, date, montant,listingFrais);
            }
        }

    }//GEN-LAST:event_btnSoumettreActionPerformed

    /**
     *
     * Creer un instances de la classe TransportAvion et l'ajoute à la listingFrais
     * @param emp
     * @param date
     * @param montant
     * @param listingFrais
     */
    private void creerFraisTransportAvion(Employe emp, LocalDate date, double montant, RegistreFrais listingFrais) {
        TransportAvion transportAvion = new TransportAvion(emp, " Transport", montant, date);
        transportAvion.setRemboDispo((Utilitaire.calculRemboursementMaxTransportAvion(emp, listingFrais, transportAvion)));
        try {
            listingFrais.ajouterFrais(transportAvion);
            clearChamps();
        } catch (FraisExisteDejaException e) {
            JOptionPane.showMessageDialog(null, "Erreur! Frais en double\n", "Erreur Ajout Frais", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     *Creer un instances de la classe Restaurant et l'ajoute à la listingFrais
     * @param emp
     * @param date
     * @param montant
     * @param listingFrais
     */
    private void creerFraisRestaurant(Employe emp, LocalDate date, double montant, RegistreFrais listingFrais) {
        Restaurant restaurant = new Restaurant(emp, "Restaurant", montant, date);
        restaurant.setRemboDispo((Utilitaire.calculRemboursementMaxRestaurant(emp, listingFrais, restaurant)));
        try {
            listingFrais.ajouterFrais(restaurant);
            clearChamps();
        } catch (FraisExisteDejaException e) {
            JOptionPane.showMessageDialog(null, "Erreur! Frais en double\n", "Erreur Ajout Frais", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Creer un instances de la classe Transport et l'ajoute à la listingFrais
     * @param emp
     * @param date
     * @param montant
     * @param listingFrais
     */
    private void creerFraisTransport(Employe emp, LocalDate date, double montant, RegistreFrais listingFrais) {
        Transport transport = new Transport(emp, " Transport", montant, date);
        transport.setRemboDispo((Utilitaire.calculRemboursementMaxTransport(emp, listingFrais, transport)));
        try {
            listingFrais.ajouterFrais(transport);
            clearChamps();
        } catch (FraisExisteDejaException e) {
            JOptionPane.showMessageDialog(null, "Erreur! Frais en double\n", "Erreur Ajout Frais", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * Creer un instances de la classe Hebergement et l'ajoute à la listingFrais
     * @param emp
     * @param date
     * @param montant
     * @param listingFrais
     */
    private void creerFraisHergement(Employe emp, LocalDate date, double montant, RegistreFrais listingFrais) {
        Hebergement hebergement = new Hebergement(emp, "Hebergement", montant, date);
        hebergement.setRemboDispo(Utilitaire.calculRemboursementMaxHebergement(emp, listingFrais, hebergement));

        try {
            listingFrais.ajouterFrais(hebergement);

            clearChamps();
        } catch (FraisExisteDejaException e) {
            JOptionPane.showMessageDialog(null, "Erreur! Frais en double\n", "Erreur Ajout Frais", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * Valide et envoie un message si un nombre est plus petit que zero
     * @param montant
     * @return boolean
     */
    private boolean validerMontantPlusGrdZero(double montant) {
        boolean flag = true;
        if (montant < 0) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Le montant doit être positif",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
            return flag;
        }
        return flag;
    }

    /**
     * Valide et envoie un message si la date se passe dans le futur
     * @param date
     * @return
     */
    private boolean validerDate(LocalDate date) {
        boolean flag = true;
        LocalDate dateNow = LocalDate.now();

        if (date.isAfter(dateNow)) {
            flag = false;
            JOptionPane.showMessageDialog(null, "La date doit être dans le passé",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
            return flag;
        }
        return flag;
    }


    private void txtDateFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateFormatActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDateFormatActionPerformed

    /**
     * Recherche à travers une liste un emp et le return
     * @return Employe
     */
    private Employe trouverEmploye() {
        Employe empVide = new Employe();
        for (Employe emp : listing.getRegistre()) {
            if (txtNomEmp.getText().equalsIgnoreCase(emp.getNom())
                    && txtPrenomEmp.getText().equalsIgnoreCase(emp.getPrenom())) {
                return emp;
            }
        }
        return empVide;
    }

    /**
     * Recherche à travers une liste un emp et le return une valeur boolean si il l'a trouvé.
     * @return boolean
     */
    private boolean validerEmploye() {
        boolean trouve = false;

        for (Employe emp : listing.getRegistre()) {
            if (txtNomEmp.getText().equalsIgnoreCase(emp.getNom())
                    && txtPrenomEmp.getText().equalsIgnoreCase(emp.getPrenom())) {
                //&& IL MANQUE LA CLOSE DU TYPE--- Pas trouvé comment.... )
                trouve = true;
                return trouve;
            }
        }

        if (!trouve) {
            JOptionPane.showMessageDialog(null, "Employe inexistant! ",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }

        return trouve;
    }

    /**
     * Valide si les champs de texte son bien remplie
     * @return boolean
     */
    private boolean validerData() {
        boolean flag = true;
        if (txtNomEmp.getText().isEmpty()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Hey oui !! Le nom est Obligatoire ! ",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }
        if (txtPrenomEmp.getText().isEmpty()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Hey oui !! Le prénom est obligatoire !",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }
        if (txtMontant.getText().isEmpty()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Hey oui !! Le montant est Obligatoire ! ",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }
        if (txtDateFormat.getText().isEmpty()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Hey oui !! Le date est obligatoire !",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }

        if (!jCheckJunior.isSelected() && !jCheckSenior.isSelected() && !jCheckSuper.isSelected()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Le choix du type d'employé est obligatoire.",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }

        if (!jCheckJunior.isSelected() && !jCheckSenior.isSelected() && !jCheckSuper.isSelected()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Le choix du type de facture est obligatoire.",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }


        return flag;
    }

    /**
     * Vide tous les champs de cette page
     */
    private void clearChamps() {


        //vider les checks
        jCheckHebergement.setEnabled(true);
        jCheckHebergement.setSelected(false);
        jCheckJunior.setEnabled(true);
        jCheckJunior.setSelected(false);
        jCheckPlaneRide.setSelected(false);
        jCheckRestaurant.setEnabled(true);
        jCheckRestaurant.setSelected(false);
        jCheckSenior.setEnabled(true);
        jCheckSenior.setSelected(false);
        jCheckSuper.setEnabled(true);
        jCheckSuper.setSelected(false);
        jCheckTransport.setEnabled(true);
        jCheckTransport.setSelected(false);
        jCheckPlaneRide.setEnabled(true);
        jCheckPlaneRide.setSelected(false);

        txtNomEmp.setText("");
        txtPrenomEmp.setText("");
        txtMontant.setText("");
        txtDateFormat.setText("");
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenEntrerFacture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenEntrerFacture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenEntrerFacture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenEntrerFacture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new FenEntrerFacture().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEffacer;
    private javax.swing.JButton btnRetour;
    private javax.swing.JButton btnSoumettre;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBox jCheckHebergement;
    private javax.swing.JCheckBox jCheckJunior;
    private javax.swing.JCheckBox jCheckPlaneRide;
    private javax.swing.JCheckBox jCheckRestaurant;
    private javax.swing.JCheckBox jCheckSenior;
    private javax.swing.JCheckBox jCheckSuper;
    private javax.swing.JCheckBox jCheckTransport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JLabel lblTitre;
    private javax.swing.JFormattedTextField txtDateFormat;
    private javax.swing.JTextField txtMontant;
    private javax.swing.JTextField txtNomEmp;
    private javax.swing.JTextField txtPrenomEmp;
    // End of variables declaration//GEN-END:variables


}

 
